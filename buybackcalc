# Nushares buyback and Peercoin reserve operations calculator
#
#MIT License (MIT)
#Copyright (c) 2016 mh001
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
#DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
#OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
#OR OTHER DEALINGS IN THE SOFTWARE.
#
# Change log
# v0.11 add and use bitstamp last price for BTC/USD
# v0.10.2 add -b to specify block height manually. change default nud name
# v0.10.1 remove local tmp file
# v0.10 100% resereve. https://discuss.nubits.com/t/passed-temporarily-cap-nbt-supply-with-full-reserve/4107 ; dislay NBT prices in BTC and USD ; remove "\"
# v0.9.4 NuSafe emptied. Cosmetic words.
# v0.9.3 update BTC held by JL https://discuss.nubits.com/t/current-liquidity/1239/1711
# v0.9.2 output format fix
# v0.9.1 use buyside BTC instead of full reserve; revision of standard and core https://discuss.nubits.com/t/revision-standard-and-core/3932
# v0.9 implement Outstanding Nubits https://discuss.nubits.com/t/voting-outstanding-nubits/3750 and Standard and Core https://discuss.nubits.com/t/passed-standard-and-core/3767
# v0.8.4 update JL's BTC. http...3347/176
# v0.8.3 update JL's BTC. http...3347/170
# v0.8.2 show totalparked nbt but do not use in calculation. add nud else case.
# v0.8.1 less calls with a temp file
# v0.8 add command line options and read NBT moneysupply from alix. enhance output readability
# v0.7.1 Nusafe url and explanation. Clean up code before opensource due to https://discuss.nubits.com/t/passed-grant-for-nsr-buyback-and-ppc-reserve-operation-calculator/3752.
# v0.7 implement PPC reserve and BTC reserve percentage https://discuss.nubits.com/t/passed-peercoin-flot-reserve/3337/1 and https://discuss.nubits.com/t/passed-bitcoin-reserve/3566/1
# v0.6 NuSafe not counted in for buyback calculation https://discuss.nubits.com/t/passed-bitcoin-reserve/3566/18 
# v0.5.2 keep 4 digits after decimal in buyback BTC amount; update Jordan Lee's T4 BTC holdings 
# v0.5.1 update Jordan Lee's T4 BTC holdings 
# v0.5 20160303 add Jordan Lee's NBT holdings https://discuss.nubits.com/t/nsr-buyback-calculations/3347/90; modify Jordan Lee's BTC holdings https://discuss.nubits.com/t/nsr-buyback-calculations/3347/92; add URL to displayed btc and nbt addresses; add url error handling
# v0.4.1 update Jordan Lee's T4 BTC holdings
# v0.4 update Jordan Lee's T4 BTC holdings; comment out gateways; add NuSafe
# v0.3 https://discuss.nubits.com/t/nsr-buyback-calculations/3347/56

# get balance in address in $1, return balance in $tempval. Exit if timeout.

#EXPL=http://svr1.nubitsexplorer.nu/api/addressInfo
function nbtBalance { EXPL=http://blockexplorer.nu/api/addressInfo; tempval=`curl -s $EXPL/$1 | awk 'BEGIN{RS=",\"";FS=":"}{print $1,$2}' | grep  totalBalanceInt | awk '{print $2}'`;if [[ $tempval == "" ]]; then echo Failed to get balance from $EXPL; exit; else echo Balance of [$1]\($EXPL/$1\) is $tempval NBT; fi }

function btcBalance  { EXPL=http://btc.blockr.io/api/v1/address/info; tempval=`curl -s $EXPL/$1 | awk 'BEGIN{RS=",\"";FS=":"}{print $1,$2}' | grep  balance\" | awk '{print $2}'`;if [[ $tempval == "" ]]; then echo Failed to get balance from $EXPL; exit; else echo Balance of [$1]\($EXPL/$1\) is $tempval BTC; fi }

# bitfinex btc price
#function btcPrice { tempval=`curl -s https://api.bitfinex.com/v1/pubticker/btcusd | awk 'BEGIN{RS=",\"";FS=":"}{print $1,$2}' | grep mid | awk '{print $2}'| tr -d \"`;if [[ $tempval == "" ]]; then echo bitfinex BTC price source is down; exit; else echo bitfinex BTC mid price is $tempval USD; fi }

# bitstamp btc price
function btcPrice { tempval=`curl -s https://www.bitstamp.net/api/v2/ticker/btcusd | tr -s \" " " | awk '{print $8}'`;if [[ $tempval == "" ]]; then echo bitstamp BTC price source is down; exit; else echo bitstamp BTC last price is $tempval USD; fi }

function ppcBalance  { EXPL=http://ppc.blockr.io/api/v1/address/info; tempval=`curl -s $EXPL/$1 | awk 'BEGIN{RS=",\"";FS=":"}{print $1,$2}' | grep  balance\" | awk '{print $2}'`;if [[ $tempval == "" ]]; then echo Failed to get balance from $EXPL; exit; else echo Balance of [$1]\($EXPL/$1\) is $tempval PPC; fi }

function ppcPrice { tempval=`curl -s https://btc-e.com/api/3/ticker/ppc_btc | awk 'BEGIN{RS=",\"";FS=":"}{print $1,$2}' | grep avg | awk '{print $2}'| tr -d \"`;if [[ $tempval == "" ]]; then echo btc-e PPC price source is down; exit; else echo btc-e PPC average price is $tempval BTC; fi }

# temporary file
TEMPLIST=/tmp/templist
block=0

echo Nushares buyback calculation as of `date --utc`

# parse command line
options=`getopt -o t,n,m:,b: -l test,nud,moneysupply,blockheight: -- "$@"`
#echo $options
eval set -- "$options"

while [ $# -gt 0 ]; do
  case $1 in
#  -t|--test) echo Test run; test=1;;
  -n|--nud) echo Get moneysupply from nud; useNud=1;;
  -m|--moneysupply) manual=1; moneysupply=$2;shift;;
  -b|--blockheight) manual=1; block=$2;shift;;
  (--) shift; break;;
  (-*) break;;
  (*) break;;
  esac
  shift
done

# replace this with the command that runs nud locally
NUD=../nud;

if [[ $manual != 1 ]]; then

if [[ $useNud == "1" ]]; then
  $NUD --unit=B getinfo | tee $TEMPLIST | grep 'blocks';
  totalNBT=`cat $TEMPLIST | awk '$1 ~ /moneysupply/{print $3}' | tr -d ,`;
  totalparked=`cat $TEMPLIST | awk '$1 ~ /totalparked/{print $3}' | tr -d ,`;
  if [[ $totalNBT == "" ]]; then
      echo Failed to get moneysupply from nud;
      exit;
  fi
else 
     curl -s https://alix.coinerella.com/panel/api/?getinfo | awk 'BEGIN{RS=",\"";FS=":"}{print $1,$2}' | tee $TEMPLIST | grep blocks | tr \  :;
     totalNBT=`cat $TEMPLIST | grep moneysupply_nbt | awk '{print $2}'`;
     totalparked=`cat $TEMPLIST | grep totalparked | awk '{print $2}'`;
     if [[ $totalNBT == "" ]]; then
     	 echo Failed to get moneysupply from https://alix.coinerella.com;
	 exit;
     fi
fi
else

# Use this to manually set the block height and total Nubits money supply if unable to run nud or read from elsewhere
  echo Blockheight is set to $block; 
  totalNBT=$moneysupply
  echo Moneysupply is set to $totalNBT
  echo
fi


echo Total NBT = $totalNBT
echo $totalNBT > $TEMPLIST
echo

echo **Uncirculating Nubits**
echo
echo \* FSRT multisig
nbtBalance BhCnQrYrA5LZm871dtMQEXeU93gmqbhdrC
echo $tempval >> $TEMPLIST

echo \* FSRT singlesig
nbtBalance BFTnCyMX1nsTNp6X7Bcm1qVocvShdbwtMi
echo $tempval >> $TEMPLIST

echo \* JordanLee singlesig
nbtBalance B5Zi5XJ1sgS6mWGu7bWJqGVnuXwiMXi7qj
echo $tempval >> $TEMPLIST

echo \* JordanLee singlesig [from liquidity ops]\(https://discuss.nubits.com/t/nsr-buyback-calculations/3347/90\)
nbtBalance BT9AWq9r1i6kghZc6LtrvNb2wRFh7JLCdP
echo $tempval >> $TEMPLIST

echo \* FLOT 3-of-5 multisig
nbtBalance BqyRzFtWXDmjxrYpyJD42MLE5xc8FrB4js
echo $tempval >> $TEMPLIST

echo \* Total parked Nubits is $totalparked. They are not used in circulating nubits calculation for buyback purposes.
#echo $tempval >> $TEMPLIST

#cat $TEMPLIST
# calculate total circulating nubits using the first line minus rest of the lines
circNBT=`awk  '{if(n) c-=$1; else {c=$1;n=1}}END{printf "%f",c}' $TEMPLIST`

echo
echo Total NBT in circulation is $circNBT NBT.
echo

echo **Tier 4 Funds**
echo
echo \* Tier 4 buy side funds controlled by FLOT
echo FLOT 5-of-8 multisig old
btcBalance 3QDWJ2yqJ5iTUg6cSpAwxx95ba3NG97hzG
echo $tempval > $TEMPLIST

echo FLOT 5-of-8 multisig new
btcBalance 3HikFkS2Zinab1TJq7dqp6wSPyLu7i7bhe
echo $tempval >> $TEMPLIST

jltbc=0
echo \* Tier 4 buy side funds controlled by JordanLee [$jltbc BTC]\(https://discuss.nubits.com/t/current-liquidity/1239/1711\)
echo $jltbc >> $TEMPLIST

nuSafe=0
echo \* NuSafe has [\$$nuSafe]\(https://discuss.nubits.com/t/flot-btc-operations-buy-side/3117/711\) for T4, and is [not included for buyback pool calculation]\(https://discuss.nubits.com/t/passed-bitcoin-reserve/3566/15\).

echo \* FLOT 3-of-5 multisig Peercoin
ppcBalance pM68K72BBa2KX7Kj2qY5jgTB3AmCUKFQmV
ppcReserve=$tempval

# Get BTC and PPC prices
echo
btcPrice
bp=$tempval
ppcPrice
pp=$tempval
# poloniex nbt price
curl -s https://poloniex.com/public?command=returnTicker | awk 'BEGIN{RS="NBT";FS=","}{if (n==1)print $2,$3,$4;n+=1}'| tr -s \" " " | awk '{print "Poloniex NBT/BTC",$3," $",$3*BTCP}' BTCP=$bp
echo The following calculations use 1 NBT = \$1.
echo

#
# testing# parameters
#circNBT=800000
#ppcReserve=100000
#nuSafe=30000
#bp=400 # BTC price in USD
#pp=0.0010 # PPC price in BTC
# total T4 btc buyside
#TEMPLIST=/tmp/templist
#echo 330 > $TEMPLIST

# the reserved ratio of Nubits excluded for buyback calculation.
reserve_fraction=1
# NSR buyback ratio against buyback pool
NSR_bb_ratio=0.05
# NSR buyback threshold
NSR_bb_threshold=2500
# PPC target (PPCTR): PPC reserve against circulating NBT
PPCTR=0.05
# PPC velocity (PPCV): rate of PPC reserve overflow buying BTC
PPCV=0.1
# PPC reserve fill ratio against buyback pool
PPCres_fill_ratio=0.05
# PPC threshold (PPCTH): threshold of PPC reserve overflow buying BTC
PPCTH=1000


# calculate buyside fund in BTC, total reserve, buyback pool, the Standard
# NSR buyback amount, PPC reserve overflow buy BTC. Finally if poo>0 and 
# PPC-reserve-overflow < 0 fill PPC reserve according to standard.
awk  '{bsBTC += $1}END{
totalBuyside = bsBTC+ppcReserve*PPCP+NS/BTCP;
printf "Tier 4 buy side funds %f BTC, %f PPC, and $%f, valued $%f (%f BTC)\n\n",
bsBTC,ppcReserve,NS,totalBuyside*BTCP,totalBuyside;

outstandingNBT = circNBT -  NS;
printf "Of the %f NBT in circulation, %f - %f(NuSafe) = %f NBT are outstanding.\n\n",
circNBT,circNBT,NS,outstandingNBT;

excludedNBT = outstandingNBT * resFrac;
printf "%.2f percent of outstanding Nubits, %f NBT (%f BTC), are reserved and excluded from the share buyback calculation.\n\n",
resFrac*100,excludedNBT,excludedNBT/BTCP;

poolNBT = bsBTC*BTCP - excludedNBT;
pool= bsBTC - excludedNBT/BTCP;
printf "%f - %f = %f BTC (%f - %f = %f NBT) are in the share buyback pool.\n",
bsBTC,excludedNBT/BTCP,pool,totalBuyside*BTCP,excludedNBT,poolNBT;

standard = pool*NSR_bb_ratio;
standardNBT = poolNBT*NSR_bb_ratio;
printf "The *Standard* is %.2f percent of this, %.4f BTC (~ %.2f NBT)\n\n",
NSR_bb_ratio*100,standard,standardNBT;

if (standardNBT > NSR_bb_threshold) {printf "Standard > %.0f: **Buy %.2f NBT (%.4f BTC) amount of NSR next week.**\n\n",NSR_bb_threshold,standardNBT,standard} 
else if (standardNBT < -NSR_bb_threshold) {printf "Standard < -%.0f: **Sell %.2f NBT (%.4f BTC) amount of NSR next week.**\n\n",NSR_bb_threshold,-standardNBT,-standard} 
else {printf "**There will be no NSR buy or sell next week.**\n\n";}

F = (PPCTR / resFrac) * (PPCV / NSR_bb_ratio);
printf "Auxiliary reserve flow is %f\n",F;
PPCST = PPCV * (ppcReserve*PPCP*BTCP - PPCTR * outstandingNBT);
printf "PPC Standard is %f NBT\n\n",PPCST;

STF = standardNBT * F;
if (STF > PPCTH) {printf "Standard x F (%f) > %.0f: **Buy %.2f NBT (%.4f BTC) amount of PPC next week.**\n\n",STF,PPCTH,STF,standard*F} 
else if (STF < -PPCTH) {printf "Standard x F (%f) < -%.0f: **Sell %.2f NBT (%.4f BTC) amount of PPC next week.**\n\n",STF,PPCTH,STF,-standard*F} 
else {printf "%.0f < Standard x F (%f) < %.0f: **There will be no PPC reserve buy or sell next week.**\n",STF,-PPCTH,PPCTH;}

if (PPCST > PPCTH) printf "%f > %f: **Sell %f NBT amount of PPC reserve next week.**\n", PPCST, PPCTH, PPCST;

}' circNBT=$circNBT ppcReserve=$ppcReserve NS=$nuSafe BTCP=$bp PPCP=$pp resFrac=$reserve_fraction PPCTR=$PPCTR PPCV=$PPCV PPCres_fill_ratio=$PPCres_fill_ratio NSR_bb_ratio=$NSR_bb_ratio NSR_bb_threshold=$NSR_bb_threshold PPCTH=$PPCTH $TEMPLIST

exit

